[{"D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\index.js":"1","D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\App.js":"2","D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\lib\\RTCMultiConnection.js":"3","D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\lib\\Hark.js":"4","D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\component\\DrawerResponsive.js":"5","D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\component\\UserList.js":"6","D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\component\\RoomForm.js":"7","D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\component\\SignIn.js":"8","D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\component\\Chat.js":"9","D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\hooks\\useConnection.js":"10","D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\context\\connectionContext.js":"11","D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\hooks\\useStream.js":"12"},{"size":205,"mtime":1615354409830,"results":"13","hashOfConfig":"14"},{"size":756,"mtime":1621318875182,"results":"15","hashOfConfig":"14"},{"size":1451,"mtime":1614748757897,"results":"16","hashOfConfig":"14"},{"size":752,"mtime":1615966330332,"results":"17","hashOfConfig":"14"},{"size":6703,"mtime":1620024351290,"results":"18","hashOfConfig":"14"},{"size":1950,"mtime":1616481070350,"results":"19","hashOfConfig":"14"},{"size":9158,"mtime":1624181405619,"results":"20","hashOfConfig":"14"},{"size":7041,"mtime":1624181494795,"results":"21","hashOfConfig":"14"},{"size":4449,"mtime":1618214164137,"results":"22","hashOfConfig":"14"},{"size":747,"mtime":1618213042568,"results":"23","hashOfConfig":"14"},{"size":683,"mtime":1618213848148,"results":"24","hashOfConfig":"14"},{"size":952,"mtime":1618213604957,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"fxz86e",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\index.js",[],["54","55"],"D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\App.js",["56","57"],"import './App.css';\r\nimport React ,{ useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport DrawerResponsive from './component/DrawerResponsive';\r\nimport SignIn from './component/SignIn';\r\nimport { ConnectionProvider } from './context/connectionContext';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n    <ConnectionProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={SignIn} /> {/* exact : 주어진 경로와 정확히 맞아 떨어져야만 설정한 컴포넌트를 보여줌 */}\r\n          <Route path=\"/dashboard\" component={DrawerResponsive} />\r\n        </Switch>\r\n      </Router>\r\n    </ConnectionProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\lib\\RTCMultiConnection.js",[],"D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\lib\\Hark.js",[],"D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\component\\DrawerResponsive.js",[],"D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\component\\UserList.js",[],"D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\component\\RoomForm.js",[],"D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\component\\SignIn.js",[],"D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\component\\Chat.js",["58"],"import React, { useState, useEffect, useContext }  from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { green } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport moment from 'moment';\r\nimport { ConnectionContext } from '../context/connectionContext';\r\nimport connection from '../lib/RTCMultiConnection';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  chatSection: {\r\n    width: '100%',\r\n    height: '80vh'\r\n  },\r\n  headBG: {\r\n      backgroundColor: '#e0e0e0'\r\n  },\r\n  borderRight500: {\r\n      borderRight: '1px solid #e0e0e0'\r\n  },\r\n  messageArea: {\r\n    height: '70vh',\r\n    overflowY: 'auto'\r\n  },\r\n  messageAvatar:{\r\n    backgroundColor: green[500],\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n    fontSize: \"13px\"\r\n  },\r\n  myMessage:{\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n  },\r\n  participantsMessage:{\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n  }\r\n}));\r\n\r\nconst Chat = () => {\r\n    const classes = useStyles();\r\n    const [ text, setText ] = useState('');\r\n    const { participants, messageList, setMessageList } = useContext(ConnectionContext); // 컨텍스에서 전역접근가능한 채팅메시지와 참가자 상태값 받아옴\r\n\r\n    const onChange = (e) => {\r\n        setText(e.target.value);\r\n    };\r\n\r\n    const handleSendMessage = () => {\r\n        const myMsg = {\r\n            type: 'textMessage',\r\n            text: text,\r\n            userid: connection.userid,\r\n            userName: connection.extra.userName,\r\n            userProfile: connection.extra.userProfile\r\n        }\r\n        setMessageList(chat => [...chat, myMsg]); \r\n        connection.send(myMsg);\r\n        setText('');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid item xs={12}>\r\n                <List className={classes.messageArea}>\r\n                {\r\n                    participants.length > 0 && messageList.map((data, index) => { \r\n                        return (\r\n                            <ListItem  key={index} className={(data.userid === connection.userid) ? classes.myMessage : classes.participantsMessage}>\r\n                                { \r\n                                    data.userid === connection.userid \r\n                                    ? \r\n                                    null\r\n                                    : \r\n                                    <ListItemAvatar>\r\n                                        {\r\n                                            data.userProfile !== null\r\n                                            ?\r\n                                            <Avatar className={classes.messageAvatar} src='/' alt={data.userName}/>\r\n                                            :\r\n                                            <Avatar className={classes.messageAvatar} src={data.userProfile}/>\r\n                                        }\r\n                                    </ListItemAvatar> \r\n                                }\r\n                                <ListItemText primary={data.text} secondary={moment().format('YYYY-MM-DD HH:mm:ss')} />\r\n                            </ListItem>\r\n                        );\r\n                    })\r\n                }\r\n                </List>\r\n                <Divider />\r\n                <Grid container style={{padding: '20px'}}>\r\n                    <Grid item xs={11}>\r\n                        <TextField id=\"outlined-basic-email\" label=\"Type Something\" fullWidth onChange={onChange} value={text} />\r\n                    </Grid>\r\n                    <Grid item xs={1} align=\"right\">\r\n                        <IconButton color=\"primary\" aria-label=\"upload picture\" onClick={handleSendMessage} component=\"span\">\r\n                            <SendIcon />\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;",["59","60"],"D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\hooks\\useConnection.js",[],"D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\context\\connectionContext.js",[],"D:\\NodeProject\\React-ttallkk\\react-ttaallkk\\src\\hooks\\useStream.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":2,"column":17,"nodeType":"67","messageId":"68","endLine":2,"endColumn":26},{"ruleId":"65","severity":1,"message":"69","line":2,"column":28,"nodeType":"67","messageId":"68","endLine":2,"endColumn":36},{"ruleId":"65","severity":1,"message":"66","line":1,"column":27,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"61","replacedBy":"70"},{"ruleId":"63","replacedBy":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",["72"],["73"],"no-global-assign","no-unsafe-negation"]